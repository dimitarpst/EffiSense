@model IEnumerable<Appliance>

@{
    ViewData["Title"] = "My Appliances";
}

<div class="container-index">
    <h1 class="text-center">@ViewData["Title"]</h1>
    <p class="text-center my-4">
        <a asp-action="Create" class="btn btn-lg btn-primary shadow-sm">+ Create New Appliance</a>
    </p>

    <div id="applianceGridContainer">
        <div class="masonry-grid-container"
             data-current-page="@ViewBag.CurrentPage"
             data-page-size="@ViewBag.PageSize"
             data-has-more-items="@ViewBag.HasMoreItems.ToString().ToLower()"
             data-load-url="/Appliances/LoadMoreAppliances">

            <partial name="_ApplianceGridItems" model="Model" />

        </div>
        <div id="load-more-trigger-appliances" style="height: 50px;"></div>
        <div id="loading-indicator-appliances" style="display: none; text-align: center; padding: 20px;">
            <div class="spinner-border" style="color: var(--accent-primary);" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        document.addEventListener('DOMContentLoaded', function() {

            const gridElement = document.querySelector('#applianceGridContainer .masonry-grid-container');
            let msnry = null; 

            if(gridElement) {
                msnry = new Masonry( gridElement, {
                    itemSelector: '.card',
                    percentPosition: true,
                    gutter: '.gutter-sizer', 
                    transitionDuration: '0.4s' 
                });

                 const gutterSizer = document.createElement('div');
                 gutterSizer.className = 'gutter-sizer';
                 gridElement.appendChild(gutterSizer);


                if (typeof setupInfiniteScroll === 'function') {
                    setupInfiniteScroll(
                        '#applianceGridContainer .masonry-grid-container',
                        '#load-more-trigger-appliances',
                        '#loading-indicator-appliances',
                        msnry
                    );
                } else {
                    // console.error("setupInfiniteScroll function not found. Ensure infiniteScroll.js is loaded BEFORE this script.");
                }
            } else {
                 // console.error("Masonry grid container not found for initialization.");
            }
        });
    </script>
}