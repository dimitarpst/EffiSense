@model IEnumerable<Home>

@{
    ViewData["Title"] = "My Homes";
}

<div class="container-index">
    <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap mt-3">
        <h1 class="text-center text-lg-start">@ViewData["Title"]</h1>
        <p class="text-center text-lg-end my-2 my-lg-0">
            <a asp-action="Create" class="btn btn-lg btn-primary shadow-sm">
                <i class="fas fa-plus me-2"></i>Add New Home
            </a>
        </p>
    </div>

    <div id="homesGridContainer">
        <div class="masonry-grid-container"
             data-current-page="@ViewBag.CurrentPage"
             data-page-size="@ViewBag.PageSize"
             data-has-more-items="@ViewBag.HasMoreItems.ToString().ToLower()"
             data-load-url="@Url.Action("LoadMoreHomes", "Homes")">

            <partial name="../Shared/_HomeGridItems" model="Model" />

        </div>

        <div id="load-more-trigger-homes" style="height: 50px; clear: both;"></div>

        <div id="loading-indicator-homes" style="display: none; text-align: center; padding: 20px; clear: both;">
            <div class="spinner-border" style="color: var(--accent-primary);" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2 fs-5">Loading more homes...</p>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            const gridElement = document.querySelector('#homesGridContainer .masonry-grid-container');
            let msnryHomes = null; 

            if (gridElement) {
                const gutterSizer = document.createElement('div');
                gutterSizer.className = 'gutter-sizer';
                gridElement.appendChild(gutterSizer);

                msnryHomes = new Masonry(gridElement, {
                    itemSelector: '.card',     
                    percentPosition: true,
                    gutter: '.gutter-sizer',    
                    transitionDuration: '0.4s'
                });
                // console.log('Masonry initialized for Homes (sync).');

                if (typeof setupInfiniteScroll === 'function') {
                    const hasMoreInitially = gridElement.getAttribute('data-has-more-items') === 'true';
                    const loadMoreTriggerElement = document.getElementById('load-more-trigger-homes');

                    if (loadMoreTriggerElement && !hasMoreInitially) {
                        loadMoreTriggerElement.style.display = 'none';
                    }

                    setupInfiniteScroll(
                        '#homesGridContainer .masonry-grid-container', 
                        '#load-more-trigger-homes',                    
                        '#loading-indicator-homes',                    
                        msnryHomes                                     
                    );
                    // console.log('Infinite scroll setup initiated for Homes.');
                } else {
                    // console.error("setupInfiniteScroll function not found. Ensure infiniteScroll.js is loaded BEFORE this script.");
                }
            } else {
                // console.error("Masonry grid container not found for Homes initialization: #homesGridContainer .masonry-grid-container");
            }
        });
    </script>
}