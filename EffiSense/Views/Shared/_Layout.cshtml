<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EffiSense</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@mdi/font@latest/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="~/css/form-details.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/index.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/chatbot.css" asp-append-version="true" />
</head>
<body>
    <div class="d-flex" id="wrapper">
        <nav id="sidebar" class="bg-light ">
            <div class="d-flex justify-content-start sidebar-header text-start pt-3 pb-3 ps-2">
                <a class="navbar-brand p-0 m-0 d-flex align-items-center" asp-area="" asp-controller="Home" asp-action="Index">
                    <span class="material-icons md-36 bolt-icon ps-1 me-1">bolt</span>
                    <span class="brand-text">Effi<span class="sense-text">Sense</span></span>
                </a>
            </div>

            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">
                        <span class="material-icons">dashboard</span>
                        <span class="nav-text">Dashboard</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="Homes" asp-action="Index">
                        <span class="material-icons">home</span>
                        <span class="nav-text">My Homes</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="Appliances" asp-action="Index">
                        <span class="material-icons">devices</span>
                        <span class="nav-text">My Appliances</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="Usages" asp-action="Index">
                        <span class="material-icons">bar_chart</span>
                        <span class="nav-text">My Usages</span>
                    </a>
                </li>
            </ul>
        </nav>

        <div id="content-wrapper" class="flex-grow-1 d-flex flex-column">
            <nav class="navbar navbar-expand-lg navbar-light bg-light sticky-top">
                <div class="container-fluid">
                    <button class="btn btn btn-primary order-lg-1 order-2" id="sidebarToggle">
                        <span class="material-icons me-0" style="line-height:normal;">menu</span>
                    </button>

                    <div class="ms-lg-auto me-auto me-lg-0 order-lg-2 order-1">
                        <partial name="_LoginPartial" />
                    </div>
                </div>
            </nav>

            <main class="flex-grow-1">
                <div class="container-fluid">
                    @RenderBody()
                </div>
            </main>
        </div>
    </div>

    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <div id="chatbot-fab">
            <i class="fab-icon fas fa-comment-dots"></i>
            <i class="fab-icon fas fa-times"></i>
        </div>

        <div id="chatbot-window">
            <div class="chat-header">
                <span>EffiSense Assistant</span>
                <button id="chatbot-close-btn">&times;</button>
            </div>
            <div class="chat-body" id="chat-body"></div>
            <div class="chat-input">
                <input type="text" id="chatbot-input" placeholder="Write a message...">
                <button id="chatbot-send-btn">
                    <i class="fas fa-arrow-up"></i>
                </button>
            </div>
        </div>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>
    <script src="https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js"></script>

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/infiniteScroll.js" asp-append-version="true"></script>
    <script src="~/js/masonryInitializer.js" asp-append-version="true"></script>

    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <script src="~/js/chatbot.js" asp-append-version="true"></script>
    }

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/usageHub")
                .build();

            connection.start()
                .catch(err => console.error("SignalR Error:", err));

            fetch("/Home/GetSimulationState")
                .then(r => r.json())
                .then(data => {
                    if (!data.success) return;
                    const t = document.getElementById("toggleSimulation");
                    const s = document.getElementById("simulationStatus");
                    if (!t || !s) return;
                    t.textContent = data.isRunning ? "Stop Simulation" : "Start Simulation";
                    t.classList.toggle("btn-danger", data.isRunning);
                    t.classList.toggle("btn-success", !data.isRunning);
                    s.textContent = data.isRunning ? "Simulation is ON" : "Simulation is OFF";
                }).catch(console.error);
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
