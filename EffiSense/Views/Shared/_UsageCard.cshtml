@model Usage

@{
    Func<int, string> GetFrequencyText = (freq) =>
    {
        return freq switch
        {
            1 => "Rarely",
            2 => "Sometimes",
            3 => "Often",
            4 => "Very Often",
            5 => "Always",
            _ => "N/A"
        };
    };
}

<div class="card shadow">
    <div class="card-body">

        <div class="card-top-right-details">
            <span class="card-efficiency-badge" title="Usage Frequency">
                <i class="fas fa-sync-alt me-1"></i>@GetFrequencyText(Model.UsageFrequency)
            </span>
        </div>

        <div class="card-header-flex">
            <div class="card-icon-container">
                @if (!string.IsNullOrEmpty(Model.IconClass)) 
                {
                    <i class="@Model.IconClass card-icon"></i>
                }
                else if (!string.IsNullOrEmpty(Model.Appliance?.IconClass))
                {
                    <i class="@Model.Appliance.IconClass card-icon"></i>
                }
                else
                {
                    <i class="fas fa-plug card-icon"></i>
                }
            </div>
            <div class="card-title-section">
                <div class="card-title-brand-group">
                    <h5 class="card-main-title">@(Model.Appliance?.Name ?? "N/A")</h5>
                    @if (Model.Appliance?.Home != null && !string.IsNullOrEmpty(Model.Appliance.Home.HouseName))
                    {
                        <span class="card-brand-separator"></span>
                        <span class="card-brand-text">@Model.Appliance.Home.HouseName</span>
                    }
                </div>
                <p class="card-home-info-header">
                    @{
                        var combinedDateTime = Model.Date.Date + Model.Time.TimeOfDay;
                    }
                    @combinedDateTime.ToString("dd MMM yyyy, HH:mm") @* Format the combined value *@
                </p>
            </div>
        </div>

        <div class="card-power-details">
            <span class="card-power-value">@Html.DisplayFor(modelItem => Model.EnergyUsed)</span>
            <span class="card-power-label">kWh</span>
        </div>

        @if (!string.IsNullOrEmpty(Model.ContextNotes))
        {
            <p class="card-note-text">@Html.DisplayFor(modelItem => Model.ContextNotes)</p>
        }

        <div class="actions-row row g-2">
            <div class="col">
                <a asp-controller="Usages" asp-action="Edit" asp-route-id="@Model.UsageId" class="btn btn-sm btn-warning w-100">Edit</a>
            </div>
            <div class="col">
                <a asp-controller="Usages" asp-action="Details" asp-route-id="@Model.UsageId" class="btn btn-sm btn-info w-100">Details</a>
            </div>
            <div class="col">
                <a asp-controller="Usages" asp-action="Delete" asp-route-id="@Model.UsageId" class="btn btn-sm btn-danger w-100">Delete</a>
            </div>
        </div>

    </div>
</div>